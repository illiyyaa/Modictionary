{"version":3,"sources":["halaman/logo.png","halaman/Home.js","halaman/Name.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","useState","mp","semester","value","setValue","getData","a","headers","queryData","query","axios","method","data","qs","stringify","console","log","formatted_data","results","bindings","map","index","formatter","error","judulmodul","matkul","dosen","asprak","result","class","style","display","key","id","className","color","backgroundColor","height","src","logo","to","float","width","background","onChange","event","target","type","placeholder","onClick","Name","input","alt","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.993bdf73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.790c184c.png\";","import React, { useState } from 'react';\r\nimport logo from './logo.png';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport '../style.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Home(){\r\n  //deklarasi awal\r\n  const [value, setValue] = useState({\r\n    mp: [],\r\n    semester : '',\r\n  });\r\n//ambil data\r\n  const getData = async () => {\r\n    const BASE_URL = \"http://qrary-fuseki-service.herokuapp.com/modic-semweb/query\";\r\n\r\n    const headers = {\r\n      'Accept': 'application/sparql-results+json,*/*;q=0.9',\r\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n  };\r\n  const queryData = {\r\n    query:\r\n      `PREFIX mp: <http://www.modictionary.org/ns/praktikum#>\r\n\r\n      SELECT ?matkul ?judulmodul ?dosen ?asprak ?semester\r\n        WHERE\r\n        { ?id\r\n          \t    mp:matkul    ?matkul ;\r\n                mp:judulmodul    ?judulmodul ;\r\n                mp:dosen    ?dosen ;\r\n                mp:asprak    ?asprak ;\r\n                mp:semester ?semester ;\r\n              ORDER BY DESC(?semester)\r\n              FILTER contains(?semester, \"${value.semester}\")\r\n      }`\r\n  };\r\n  try {\r\n    const { data } = await axios(BASE_URL, {\r\n      method: 'POST',\r\n      headers,\r\n      data: qs.stringify(queryData)\r\n    });\r\n    console.log(data);\r\n\r\n    // Convert Data\r\n    const formatted_data = data.results.bindings.map((mp, index) => formatter(mp, index));\r\n    console.log(formatted_data)\r\n\r\n    setValue({\r\n      ...value,\r\n      mp: formatted_data\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n//format\r\nconst formatter = (mp, index) => {\r\n  return {\r\n    \"id\": index,\r\n    \"judulmodul\": mp.judulmodul.value,\r\n    \"matkul\": mp.matkul.value,\r\n    \"dosen\": mp.dosen.value,\r\n    \"asprak\": mp.asprak.value,\r\n    \"semester\" : mp.semester.value\r\n  }\r\n}\r\n//handlechange\r\nconst handleChangesemester = event => {\r\n  setValue({\r\n    ...value,  \r\n    'semester': event.target.value, \r\n  });\r\n}\r\nconst result = value.mp.map((mp) =>\r\n  <div class=\"container\" style={{display:'flex'}}>\r\n  <div class=\"card\">\r\n    <div key={mp.id}>\r\n        <div className=\"judulmodul\">Judul Modul : {mp.judulmodul}</div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2\">\r\n            Nama Dosen : {mp.dosen}  \r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            Nama Asisten Praktikum : {mp.asprak}\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            Semester : {mp.semester}\r\n          </div>\r\n        </div>  \r\n    </div>\r\n    </div>\r\n  </div>\r\n)\r\n//layout\r\n    \r\n    return (\r\n      <div>\r\n        <title>Modictionary</title>\r\n        <header style={{color: '#e7e7e7', backgroundColor: '#0e0d3d', display: 'block', height : '50px'}}><img className=\"img\" src={logo} /> \r\n        Modictionary\r\n        <Link to=\"name\" className=\"button\"  style={{ float:'right'}} >Search by name</Link>\r\n        </header>\r\n        \r\n        \r\n        {/* <div id=\"wrapper\">\r\n          \r\n        </div> */}\r\n        {/* \t<i style=\"color:#3d3d29;\">hi</i> */}\r\n        <div id=\"content\">\r\n          <center> <h1>Cari Modul Praktikum </h1> </center>\r\n          <select style={{width:'85%', height:'45px', background: '#0e0d3d', display:'inline-block', color:'white'}} value={value.semester} onChange={handleChangesemester}>\r\n              {value.mp.map((mp) =>\r\n              <option key={mp.semester}>Semester {mp.semester}</option>)}        \r\n                   \r\n          </select>\r\n          <input \r\n                type=\"button\" style={{ float:'right'}}\r\n                className=\"button\"\r\n                id=\"search\"\r\n                placeholder=\"Mata Kuliah\"\r\n                value=\"Cari Modul\"\r\n                onClick={getData}/>\r\n        \r\n          {/* Hasil Pencarian */}\r\n          \r\n          <div className=\"result\">\r\n            <center><h2>\r\n              Hasil Pencarian Modul Praktikum\r\n            </h2>\r\n            </center>\r\n            {result}\r\n          </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n","import React, { useState } from 'react';\r\nimport logo from './logo.png';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport '../style.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Name(){\r\n\r\n  const [value, setValue] = useState({\r\n    mp: [],\r\n    input: ''\r\n  });\r\n\r\n  const getData = async () => {\r\n    const BASE_URL =\"http://qrary-fuseki-service.herokuapp.com/modic-semweb/query\";\r\n\r\n    const headers = {\r\n      'Accept': 'application/sparql-results+json,*/*;q=0.9',\r\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n    };\r\n\r\n    const queryData = {\r\n      query:\r\n        `PREFIX mp: <http://www.modictionary.org/ns/praktikum#>\r\n\r\n        SELECT ?matkul ?judulmodul ?dosen ?asprak ?semester\r\n        WHERE\r\n        { ?id\r\n          \t    mp:matkul    ?matkul ;\r\n                mp:judulmodul    ?judulmodul ;\r\n                mp:dosen    ?dosen ;\r\n                mp:asprak    ?asprak ;\r\n                mp:semester ?semester ;\r\n                FILTER (regex(?matkul, \"^${value.input}\",\"i\") || regex(?dosen, \"^${value.input}\",\"i\") || regex(?asprak, \"^${value.input}\",\"i\") || regex(?judulmodul, \"^${value.input}\",\"i\" ))\r\n        }`\r\n        \r\n          \r\n        \r\n    };\r\n\r\n    try {\r\n      const { data } = await axios(BASE_URL, {\r\n        method: 'POST',\r\n        headers,\r\n        data: qs.stringify(queryData)\r\n      });\r\n      console.log(data);\r\n\r\n      // Convert Data\r\n      const formatted_data = data.results.bindings.map((mp, index) => formatter(mp, index));\r\n      console.log(formatted_data)\r\n\r\n      setValue({\r\n        ...value,\r\n        mp: formatted_data\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n\r\n  const formatter = (mp, index) => {\r\n    \r\n    return {\r\n      \"id\": index,\r\n      \"judulmodul\": mp.judulmodul.value,\r\n      \"matkul\": mp.matkul.value,\r\n      \"dosen\": mp.dosen.value,\r\n      \"asprak\": mp.asprak.value,\r\n      \"semester\" : mp.semester.value\r\n    }\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setValue({\r\n      ...value,\r\n      'input': event.target.value\r\n    })\r\n  }\r\n\r\nconst result = value.mp.map((mp) =>\r\n  <div class=\"container\" style={{display:'flex'}}>\r\n  <div class=\"card\">\r\n    <div key={mp.id}>\r\n        <div className=\"judulmodul\">Judul Modul : {mp.judulmodul}</div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2\">\r\n            Nama Dosen : {mp.dosen}  \r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            Nama Asisten Praktikum : {mp.asprak}\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            Semester : {mp.semester}\r\n          </div>\r\n        </div>  \r\n    </div>\r\n    </div>\r\n  </div>\r\n)\r\n//layout\r\n    return (\r\n      <div>\r\n        <title>Modictionary</title>\r\n        <header style={{color: '#e7e7e7', backgroundColor: '#0e0d3d', display: 'block', height : '50px'}}><img className=\"img\" alt=\"logo\" src={logo} /> \r\n        Modictionary\r\n        <Link to=\"/\" className=\"button\"  style={{ float:'right'}} >Search by semester</Link>\r\n        </header>\r\n        \r\n        {/* <div id=\"wrapper\">\r\n          \r\n        </div> */}\r\n        {/* \t<i style=\"color:#3d3d29;\">hi</i> */}\r\n        <div id=\"content\">\r\n        <center> \r\n          <h1>Cari Modul Praktikum</h1> \r\n        <input  onChange={handleChange} type=\"text\" placeholder=\"Masukkan nama mata kuliah, dosen, atau asprak\" style={{width:'85%', height:'40px', background: '#00000', display:'inline-block'}}/>          \r\n              <button \r\n                type=\"button\" style={{ float:'right'}}\r\n                className=\"button\"\r\n                placeholder=\"Mata Kuliah\"\r\n                onClick={getData}>Search\r\n                </button>\r\n        </center>\r\n\r\n          {/* Hasil Pencarian */}\r\n          \r\n          <div class=\"result\">\r\n            <center><h2>\r\n              Hasil Pencarian Modul Praktikum\r\n            </h2>\r\n            </center>\r\n            {result}\r\n          </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n","import React, { useState } from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import qs from 'qs';\r\n// import logo from './halaman/logo.png';\r\nimport './style.css';\r\nimport Home from \"./halaman/Home\";\r\nimport Name from \"./halaman/Name\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n      <div className=\"App\">\r\n        <BrowserRouter> \r\n         <Route exact path=\"/\" component={Home}></Route>\r\n          <Route exact path=\"/name\" component={Name}></Route>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n}\r\nexport default App;\r\n ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}